# -*- coding: utf-8 -*- ############################################################################# Python code generated with wxFormBuilder (version Nov 27 2012)## http://www.wxformbuilder.org/#### PLEASE DO "NOT" EDIT THIS FILE!###########################################################################import wximport wx.xrc############################################################################# Class ApplicationFrame###########################################################################class ApplicationFrame ( wx.Frame ):		def __init__( self, parent ):		wx.Frame.__init__ ( self, parent, id = wx.ID_ANY, title = u"Solar Farm Calculator", pos = wx.DefaultPosition, size = wx.Size( 1200,800 ), style = wx.DEFAULT_FRAME_STYLE|wx.TAB_TRAVERSAL )				self.SetSizeHintsSz( wx.Size( 900,800 ), wx.DefaultSize )				ApplicationContainer = wx.GridSizer( 1, 1, 0, 0 )				InputContainer = wx.FlexGridSizer( 2, 1, 0, 0 )		InputContainer.SetFlexibleDirection( wx.BOTH )		InputContainer.SetNonFlexibleGrowMode( wx.FLEX_GROWMODE_SPECIFIED )				GeneralParameterLabelledContainer = wx.StaticBoxSizer( wx.StaticBox( self, wx.ID_ANY, u"General Parameters" ), wx.VERTICAL )				GeneralParameterContainer = wx.FlexGridSizer( 0, 3, 0, 5 )		GeneralParameterContainer.SetFlexibleDirection( wx.BOTH )		GeneralParameterContainer.SetNonFlexibleGrowMode( wx.FLEX_GROWMODE_SPECIFIED )				SiteParameterContainer = wx.StaticBoxSizer( wx.StaticBox( self, wx.ID_ANY, u"Site Information" ), wx.VERTICAL )				SiteParameterList = wx.GridSizer( 7, 1, 3, 0 )				siteLatitude = wx.FlexGridSizer( 1, 3, 0, 0 )		siteLatitude.SetFlexibleDirection( wx.HORIZONTAL )		siteLatitude.SetNonFlexibleGrowMode( wx.FLEX_GROWMODE_SPECIFIED )				self.siteLatitude_label = wx.StaticText( self, wx.ID_ANY, u"Site Latitude", wx.DefaultPosition, wx.DefaultSize, 0 )		self.siteLatitude_label.Wrap( -1 )		self.siteLatitude_label.SetFont( wx.Font( 10, 70, 90, 90, False, wx.EmptyString ) )				siteLatitude.Add( self.siteLatitude_label, 0, wx.ALIGN_CENTER_VERTICAL|wx.ALIGN_LEFT, 5 )				self.siteLatitude_input = wx.TextCtrl( self, wx.ID_ANY, wx.EmptyString, wx.DefaultPosition, wx.Size( 40,-1 ), wx.TE_LEFT|wx.TE_PROCESS_ENTER|wx.TE_PROCESS_TAB )		self.siteLatitude_input.SetMaxLength( 5 ) 		self.siteLatitude_input.SetFont( wx.Font( 10, 70, 90, 90, False, wx.EmptyString ) )				siteLatitude.Add( self.siteLatitude_input, 0, wx.ALIGN_LEFT|wx.FIXED_MINSIZE|wx.LEFT|wx.RIGHT, 5 )				self.siteLatitude_units = wx.StaticText( self, wx.ID_ANY, u"degrees", wx.DefaultPosition, wx.DefaultSize, wx.ALIGN_LEFT )		self.siteLatitude_units.Wrap( -1 )		self.siteLatitude_units.SetFont( wx.Font( 10, 70, 90, 90, False, wx.EmptyString ) )				siteLatitude.Add( self.siteLatitude_units, 0, wx.ALIGN_CENTER_VERTICAL, 5 )						SiteParameterList.Add( siteLatitude, 1, wx.EXPAND, 5 )				siteLongtitude = wx.FlexGridSizer( 1, 3, 0, 0 )		siteLongtitude.SetFlexibleDirection( wx.HORIZONTAL )		siteLongtitude.SetNonFlexibleGrowMode( wx.FLEX_GROWMODE_SPECIFIED )				self.siteLongtitude_label = wx.StaticText( self, wx.ID_ANY, u"Site Longtitude", wx.DefaultPosition, wx.DefaultSize, 0 )		self.siteLongtitude_label.Wrap( -1 )		self.siteLongtitude_label.SetFont( wx.Font( 10, 70, 90, 90, False, wx.EmptyString ) )				siteLongtitude.Add( self.siteLongtitude_label, 0, wx.ALIGN_CENTER_VERTICAL|wx.ALIGN_LEFT, 5 )				self.siteLongtitude_input = wx.TextCtrl( self, wx.ID_ANY, wx.EmptyString, wx.DefaultPosition, wx.Size( 40,-1 ), wx.TE_LEFT|wx.TE_PROCESS_ENTER|wx.TE_PROCESS_TAB )		self.siteLongtitude_input.SetMaxLength( 5 ) 		self.siteLongtitude_input.SetFont( wx.Font( 10, 70, 90, 90, False, wx.EmptyString ) )				siteLongtitude.Add( self.siteLongtitude_input, 0, wx.ALIGN_LEFT|wx.FIXED_MINSIZE|wx.LEFT|wx.RIGHT, 5 )				self.siteLongtitude_units = wx.StaticText( self, wx.ID_ANY, u"degrees", wx.DefaultPosition, wx.DefaultSize, wx.ALIGN_LEFT )		self.siteLongtitude_units.Wrap( -1 )		self.siteLongtitude_units.SetFont( wx.Font( 10, 70, 90, 90, False, wx.EmptyString ) )				siteLongtitude.Add( self.siteLongtitude_units, 0, wx.ALIGN_CENTER_VERTICAL, 5 )						SiteParameterList.Add( siteLongtitude, 1, wx.EXPAND, 5 )				siteGridLatitude = wx.FlexGridSizer( 1, 3, 0, 0 )		siteGridLatitude.SetFlexibleDirection( wx.HORIZONTAL )		siteGridLatitude.SetNonFlexibleGrowMode( wx.FLEX_GROWMODE_SPECIFIED )				self.siteGridLatitude_label = wx.StaticText( self, wx.ID_ANY, u"Grid Connection Latitude", wx.DefaultPosition, wx.DefaultSize, 0 )		self.siteGridLatitude_label.Wrap( -1 )		self.siteGridLatitude_label.SetFont( wx.Font( 10, 70, 90, 90, False, wx.EmptyString ) )				siteGridLatitude.Add( self.siteGridLatitude_label, 0, wx.ALIGN_CENTER_VERTICAL|wx.ALIGN_LEFT, 5 )				self.siteGridLatitude_input = wx.TextCtrl( self, wx.ID_ANY, wx.EmptyString, wx.DefaultPosition, wx.Size( 40,-1 ), wx.TE_LEFT|wx.TE_PROCESS_ENTER|wx.TE_PROCESS_TAB )		self.siteGridLatitude_input.SetMaxLength( 5 ) 		self.siteGridLatitude_input.SetFont( wx.Font( 10, 70, 90, 90, False, wx.EmptyString ) )				siteGridLatitude.Add( self.siteGridLatitude_input, 0, wx.ALIGN_LEFT|wx.FIXED_MINSIZE|wx.LEFT|wx.RIGHT, 5 )				self.siteGridLatitude_units = wx.StaticText( self, wx.ID_ANY, u"degrees", wx.DefaultPosition, wx.DefaultSize, wx.ALIGN_LEFT )		self.siteGridLatitude_units.Wrap( -1 )		self.siteGridLatitude_units.SetFont( wx.Font( 10, 70, 90, 90, False, wx.EmptyString ) )				siteGridLatitude.Add( self.siteGridLatitude_units, 0, wx.ALIGN_CENTER_VERTICAL, 5 )						SiteParameterList.Add( siteGridLatitude, 1, wx.EXPAND, 5 )				siteGridLongtitude = wx.FlexGridSizer( 1, 3, 0, 0 )		siteGridLongtitude.SetFlexibleDirection( wx.HORIZONTAL )		siteGridLongtitude.SetNonFlexibleGrowMode( wx.FLEX_GROWMODE_SPECIFIED )				self.siteGridLongtitude_label = wx.StaticText( self, wx.ID_ANY, u"Grid Connection Longtitude", wx.DefaultPosition, wx.DefaultSize, 0 )		self.siteGridLongtitude_label.Wrap( -1 )		self.siteGridLongtitude_label.SetFont( wx.Font( 10, 70, 90, 90, False, wx.EmptyString ) )				siteGridLongtitude.Add( self.siteGridLongtitude_label, 0, wx.ALIGN_CENTER_VERTICAL|wx.ALIGN_LEFT, 5 )				self.siteGridLongtitude_input = wx.TextCtrl( self, wx.ID_ANY, wx.EmptyString, wx.DefaultPosition, wx.Size( 40,-1 ), wx.TE_LEFT|wx.TE_PROCESS_ENTER|wx.TE_PROCESS_TAB )		self.siteGridLongtitude_input.SetMaxLength( 5 ) 		self.siteGridLongtitude_input.SetFont( wx.Font( 10, 70, 90, 90, False, wx.EmptyString ) )				siteGridLongtitude.Add( self.siteGridLongtitude_input, 0, wx.ALIGN_LEFT|wx.FIXED_MINSIZE|wx.LEFT|wx.RIGHT, 5 )				self.siteGridLongtitude_units = wx.StaticText( self, wx.ID_ANY, u"degrees", wx.DefaultPosition, wx.DefaultSize, wx.ALIGN_LEFT )		self.siteGridLongtitude_units.Wrap( -1 )		self.siteGridLongtitude_units.SetFont( wx.Font( 10, 70, 90, 90, False, wx.EmptyString ) )				siteGridLongtitude.Add( self.siteGridLongtitude_units, 0, wx.ALIGN_CENTER_VERTICAL, 5 )						SiteParameterList.Add( siteGridLongtitude, 1, wx.EXPAND, 5 )				siteNumPanels = wx.FlexGridSizer( 1, 2, 0, 0 )		siteNumPanels.SetFlexibleDirection( wx.HORIZONTAL )		siteNumPanels.SetNonFlexibleGrowMode( wx.FLEX_GROWMODE_SPECIFIED )				self.siteNumPanels_label = wx.StaticText( self, wx.ID_ANY, u"Number of Panels", wx.DefaultPosition, wx.DefaultSize, 0 )		self.siteNumPanels_label.Wrap( -1 )		self.siteNumPanels_label.SetFont( wx.Font( 10, 70, 90, 90, False, wx.EmptyString ) )				siteNumPanels.Add( self.siteNumPanels_label, 0, wx.ALIGN_CENTER_VERTICAL|wx.ALIGN_LEFT, 5 )				self.siteNumPanels_input = wx.TextCtrl( self, wx.ID_ANY, wx.EmptyString, wx.DefaultPosition, wx.Size( 40,-1 ), wx.TE_LEFT|wx.TE_PROCESS_ENTER|wx.TE_PROCESS_TAB )		self.siteNumPanels_input.SetMaxLength( 5 ) 		self.siteNumPanels_input.SetFont( wx.Font( 10, 70, 90, 90, False, wx.EmptyString ) )				siteNumPanels.Add( self.siteNumPanels_input, 0, wx.ALIGN_LEFT|wx.FIXED_MINSIZE|wx.LEFT|wx.RIGHT, 5 )						SiteParameterList.Add( siteNumPanels, 1, wx.ALIGN_LEFT|wx.ALIGN_TOP|wx.FIXED_MINSIZE, 5 )				siteNumTransformers = wx.FlexGridSizer( 1, 3, 0, 0 )		siteNumTransformers.SetFlexibleDirection( wx.HORIZONTAL )		siteNumTransformers.SetNonFlexibleGrowMode( wx.FLEX_GROWMODE_SPECIFIED )				self.siteNumTransformers_label = wx.StaticText( self, wx.ID_ANY, u"Number of Transformers", wx.DefaultPosition, wx.DefaultSize, 0 )		self.siteNumTransformers_label.Wrap( -1 )		self.siteNumTransformers_label.SetFont( wx.Font( 10, 70, 90, 90, False, wx.EmptyString ) )				siteNumTransformers.Add( self.siteNumTransformers_label, 0, wx.ALIGN_CENTER_VERTICAL|wx.ALIGN_LEFT, 5 )				self.siteNumTransformers_input = wx.TextCtrl( self, wx.ID_ANY, wx.EmptyString, wx.DefaultPosition, wx.Size( 40,-1 ), wx.TE_LEFT|wx.TE_PROCESS_ENTER|wx.TE_PROCESS_TAB )		self.siteNumTransformers_input.SetMaxLength( 5 ) 		self.siteNumTransformers_input.SetFont( wx.Font( 10, 70, 90, 90, False, wx.EmptyString ) )				siteNumTransformers.Add( self.siteNumTransformers_input, 0, wx.ALIGN_LEFT|wx.FIXED_MINSIZE|wx.LEFT|wx.RIGHT, 5 )						SiteParameterList.Add( siteNumTransformers, 1, wx.ALIGN_LEFT|wx.ALIGN_TOP|wx.FIXED_MINSIZE, 5 )				siteNumInverters = wx.FlexGridSizer( 1, 3, 0, 0 )		siteNumInverters.SetFlexibleDirection( wx.HORIZONTAL )		siteNumInverters.SetNonFlexibleGrowMode( wx.FLEX_GROWMODE_SPECIFIED )				self.siteNumInverters_label = wx.StaticText( self, wx.ID_ANY, u"Number of Inverters", wx.DefaultPosition, wx.DefaultSize, 0 )		self.siteNumInverters_label.Wrap( -1 )		self.siteNumInverters_label.SetFont( wx.Font( 10, 70, 90, 90, False, wx.EmptyString ) )				siteNumInverters.Add( self.siteNumInverters_label, 0, wx.ALIGN_CENTER_VERTICAL|wx.ALIGN_LEFT, 5 )				self.siteNumInverters_input = wx.TextCtrl( self, wx.ID_ANY, wx.EmptyString, wx.DefaultPosition, wx.Size( 40,-1 ), wx.TE_LEFT|wx.TE_PROCESS_ENTER|wx.TE_PROCESS_TAB )		self.siteNumInverters_input.SetMaxLength( 5 ) 		self.siteNumInverters_input.SetFont( wx.Font( 10, 70, 90, 90, False, wx.EmptyString ) )				siteNumInverters.Add( self.siteNumInverters_input, 0, wx.ALIGN_LEFT|wx.FIXED_MINSIZE|wx.LEFT|wx.RIGHT, 5 )						SiteParameterList.Add( siteNumInverters, 1, wx.EXPAND, 5 )						SiteParameterContainer.Add( SiteParameterList, 1, wx.EXPAND, 5 )						GeneralParameterContainer.Add( SiteParameterContainer, 1, 0, 5 )				FinancialParameterContainer = wx.StaticBoxSizer( wx.StaticBox( self, wx.ID_ANY, u"Financial" ), wx.VERTICAL )				FinancialParameterList = wx.GridSizer( 6, 1, 3, 0 )				panelCost1 = wx.FlexGridSizer( 1, 2, 0, 0 )		panelCost1.SetFlexibleDirection( wx.HORIZONTAL )		panelCost1.SetNonFlexibleGrowMode( wx.FLEX_GROWMODE_SPECIFIED )				self.financialCurrency_label = wx.StaticText( self, wx.ID_ANY, u"Base Currency", wx.DefaultPosition, wx.DefaultSize, 0 )		self.financialCurrency_label.Wrap( -1 )		self.financialCurrency_label.SetFont( wx.Font( 10, 70, 90, 90, False, wx.EmptyString ) )				panelCost1.Add( self.financialCurrency_label, 0, wx.ALIGN_CENTER_VERTICAL|wx.ALIGN_LEFT, 5 )				financialCurrency_currencyChoices = [ u"AED: United Arab Emirates Dirham", u"AFN: Afghan Afghani", u"ALL: Albanian Lek", u"AMD: Armenian Dram", u"AOA: Angolan Kwanza", u"ARS: Argentine Peso", u"AUD: Australian Dollar", u"AWG: Aruban Florin", u"AZN: Azerbaijani Manat", u"BAM: Bosnia-Herzegovina Convertible Mark", u"BBD: Barbadian Dollar", u"BDT: Bangladeshi Taka", u"BGN: Bulgarian Lev", u"BHD: Bahraini Dinar", u"BIF: Burundian Franc", u"BMD: Bermudan Dollar", u"BND: Brunei Dollar", u"BOB: Bolivian Boliviano", u"BRL: Brazilian Real", u"BSD: Bahamian Dollar", u"BTN: Bhutanese Ngultrum", u"BWP: Botswanan Pula", u"BYR: Belarusian Ruble", u"BZD: Belize Dollar", u"CAD: Canadian Dollar", u"CDF: Congolese Franc", u"CHF: Swiss Franc", u"CLP: Chilean Peso", u"CNY: Chinese Yuan", u"COP: Colombian Peso", u"CRC: Costa Rican Colón", u"CUP: Cuban Peso", u"CVE: Cape Verdean Escudo", u"CZK: Czech Republic Koruna", u"DJF: Djiboutian Franc", u"DKK: Danish Krone", u"DOP: Dominican Peso", u"DZD: Algerian Dinar", u"EEK: Estonian Kroon", u"EGP: Egyptian Pound", u"ETB: Ethiopian Birr", u"EUR: Euro" ]		self.financialCurrency_currency = wx.Choice( self, wx.ID_ANY, wx.DefaultPosition, wx.Size( 70,-1 ), financialCurrency_currencyChoices, 0 )		self.financialCurrency_currency.SetSelection( 0 )		self.financialCurrency_currency.SetFont( wx.Font( 10, 70, 90, 90, False, wx.EmptyString ) )				panelCost1.Add( self.financialCurrency_currency, 0, wx.LEFT, 5 )						FinancialParameterList.Add( panelCost1, 1, wx.EXPAND, 5 )						FinancialParameterContainer.Add( FinancialParameterList, 1, 0, 5 )						GeneralParameterContainer.Add( FinancialParameterContainer, 1, 0, 5 )				SimulationParameterContainer = wx.StaticBoxSizer( wx.StaticBox( self, wx.ID_ANY, u"Simulation Parameters" ), wx.VERTICAL )				SimulationParameterList = wx.GridSizer( 2, 1, 3, 0 )				simulationStartDate = wx.FlexGridSizer( 1, 2, 0, 0 )		simulationStartDate.SetFlexibleDirection( wx.HORIZONTAL )		simulationStartDate.SetNonFlexibleGrowMode( wx.FLEX_GROWMODE_SPECIFIED )				self.simulationStart_label = wx.StaticText( self, wx.ID_ANY, u"Start Date", wx.DefaultPosition, wx.DefaultSize, 0 )		self.simulationStart_label.Wrap( -1 )		self.simulationStart_label.SetFont( wx.Font( 10, 70, 90, 90, False, wx.EmptyString ) )				simulationStartDate.Add( self.simulationStart_label, 0, wx.ALIGN_CENTER_VERTICAL|wx.ALIGN_LEFT, 5 )				self.simulationStart_input = wx.DatePickerCtrl( self, wx.ID_ANY, wx.DefaultDateTime, wx.DefaultPosition, wx.DefaultSize, wx.DP_DEFAULT )		simulationStartDate.Add( self.simulationStart_input, 0, wx.LEFT, 5 )						SimulationParameterList.Add( simulationStartDate, 1, wx.ALIGN_LEFT|wx.ALIGN_TOP|wx.FIXED_MINSIZE, 5 )				simulationEndDate = wx.FlexGridSizer( 1, 2, 0, 0 )		simulationEndDate.SetFlexibleDirection( wx.HORIZONTAL )		simulationEndDate.SetNonFlexibleGrowMode( wx.FLEX_GROWMODE_SPECIFIED )				self.simulationEnd_label = wx.StaticText( self, wx.ID_ANY, u"End Date", wx.DefaultPosition, wx.DefaultSize, 0 )		self.simulationEnd_label.Wrap( -1 )		self.simulationEnd_label.SetFont( wx.Font( 10, 70, 90, 90, False, wx.EmptyString ) )				simulationEndDate.Add( self.simulationEnd_label, 0, wx.ALIGN_CENTER_VERTICAL|wx.ALIGN_LEFT, 5 )				self.simulationEnd_input = wx.DatePickerCtrl( self, wx.ID_ANY, wx.DefaultDateTime, wx.DefaultPosition, wx.DefaultSize, wx.DP_DEFAULT )		simulationEndDate.Add( self.simulationEnd_input, 0, wx.LEFT, 5 )						SimulationParameterList.Add( simulationEndDate, 1, wx.ALIGN_LEFT|wx.ALIGN_TOP|wx.FIXED_MINSIZE, 5 )						SimulationParameterContainer.Add( SimulationParameterList, 1, 0, 5 )						GeneralParameterContainer.Add( SimulationParameterContainer, 1, 0, 5 )						GeneralParameterLabelledContainer.Add( GeneralParameterContainer, 1, 0, 5 )						InputContainer.Add( GeneralParameterLabelledContainer, 1, 0, 5 )				ComponentParameterLabelledContainer = wx.StaticBoxSizer( wx.StaticBox( self, wx.ID_ANY, u"Components" ), wx.VERTICAL )				ComponentParameterContainer = wx.GridSizer( 2, 3, 0, 5 )				PanelParameterContainer = wx.StaticBoxSizer( wx.StaticBox( self, wx.ID_ANY, u"Panels" ), wx.VERTICAL )				PanelParameterList = wx.GridSizer( 6, 1, 3, 0 )				panelVoltage = wx.FlexGridSizer( 1, 3, 0, 0 )		panelVoltage.SetFlexibleDirection( wx.HORIZONTAL )		panelVoltage.SetNonFlexibleGrowMode( wx.FLEX_GROWMODE_SPECIFIED )				self.panelVoltage_label = wx.StaticText( self, wx.ID_ANY, u"Panel Voltage", wx.DefaultPosition, wx.DefaultSize, 0 )		self.panelVoltage_label.Wrap( -1 )		self.panelVoltage_label.SetFont( wx.Font( 10, 70, 90, 90, False, wx.EmptyString ) )				panelVoltage.Add( self.panelVoltage_label, 0, wx.ALIGN_CENTER_VERTICAL|wx.ALIGN_LEFT, 5 )				self.panelVoltage_input = wx.TextCtrl( self, wx.ID_ANY, wx.EmptyString, wx.DefaultPosition, wx.Size( 40,-1 ), wx.TE_LEFT|wx.TE_PROCESS_ENTER|wx.TE_PROCESS_TAB )		self.panelVoltage_input.SetMaxLength( 5 ) 		self.panelVoltage_input.SetFont( wx.Font( 10, 70, 90, 90, False, wx.EmptyString ) )				panelVoltage.Add( self.panelVoltage_input, 0, wx.ALIGN_LEFT|wx.FIXED_MINSIZE|wx.LEFT|wx.RIGHT, 5 )				self.panelVoltage_units = wx.StaticText( self, wx.ID_ANY, u"V (DC)", wx.DefaultPosition, wx.DefaultSize, wx.ALIGN_LEFT )		self.panelVoltage_units.Wrap( -1 )		self.panelVoltage_units.SetFont( wx.Font( 10, 70, 90, 90, False, wx.EmptyString ) )				panelVoltage.Add( self.panelVoltage_units, 0, wx.ALIGN_CENTER_VERTICAL, 5 )						PanelParameterList.Add( panelVoltage, 1, wx.ALIGN_LEFT|wx.ALIGN_TOP|wx.FIXED_MINSIZE, 5 )				panelEffciency = wx.FlexGridSizer( 1, 3, 0, 0 )		panelEffciency.SetFlexibleDirection( wx.HORIZONTAL )		panelEffciency.SetNonFlexibleGrowMode( wx.FLEX_GROWMODE_SPECIFIED )				self.panelEffciency_label = wx.StaticText( self, wx.ID_ANY, u"Effciency", wx.DefaultPosition, wx.DefaultSize, 0 )		self.panelEffciency_label.Wrap( -1 )		self.panelEffciency_label.SetFont( wx.Font( 10, 70, 90, 90, False, wx.EmptyString ) )				panelEffciency.Add( self.panelEffciency_label, 0, wx.ALIGN_CENTER_VERTICAL|wx.ALIGN_LEFT, 5 )				self.panelEffciency_input = wx.TextCtrl( self, wx.ID_ANY, wx.EmptyString, wx.DefaultPosition, wx.Size( 40,-1 ), wx.TE_LEFT|wx.TE_PROCESS_ENTER|wx.TE_PROCESS_TAB )		self.panelEffciency_input.SetMaxLength( 5 ) 		self.panelEffciency_input.SetFont( wx.Font( 10, 70, 90, 90, False, wx.EmptyString ) )				panelEffciency.Add( self.panelEffciency_input, 0, wx.ALIGN_LEFT|wx.FIXED_MINSIZE|wx.LEFT|wx.RIGHT, 5 )				self.panelEffciency_units = wx.StaticText( self, wx.ID_ANY, u"%", wx.DefaultPosition, wx.DefaultSize, wx.ALIGN_LEFT )		self.panelEffciency_units.Wrap( -1 )		self.panelEffciency_units.SetFont( wx.Font( 10, 70, 90, 90, False, wx.EmptyString ) )				panelEffciency.Add( self.panelEffciency_units, 0, wx.ALIGN_CENTER_VERTICAL, 5 )						PanelParameterList.Add( panelEffciency, 1, wx.ALIGN_LEFT|wx.ALIGN_TOP|wx.FIXED_MINSIZE, 5 )				panelDegredation = wx.FlexGridSizer( 1, 3, 0, 0 )		panelDegredation.SetFlexibleDirection( wx.HORIZONTAL )		panelDegredation.SetNonFlexibleGrowMode( wx.FLEX_GROWMODE_SPECIFIED )				self.panelDegradation_label = wx.StaticText( self, wx.ID_ANY, u"Effciency Loss", wx.DefaultPosition, wx.DefaultSize, 0 )		self.panelDegradation_label.Wrap( -1 )		self.panelDegradation_label.SetFont( wx.Font( 10, 70, 90, 90, False, wx.EmptyString ) )				panelDegredation.Add( self.panelDegradation_label, 0, wx.ALIGN_CENTER_VERTICAL|wx.ALIGN_LEFT, 5 )				self.panelDegradation_input = wx.TextCtrl( self, wx.ID_ANY, wx.EmptyString, wx.DefaultPosition, wx.Size( 40,-1 ), wx.TE_LEFT|wx.TE_PROCESS_ENTER|wx.TE_PROCESS_TAB )		self.panelDegradation_input.SetMaxLength( 5 ) 		self.panelDegradation_input.SetFont( wx.Font( 10, 70, 90, 90, False, wx.EmptyString ) )				panelDegredation.Add( self.panelDegradation_input, 0, wx.ALIGN_LEFT|wx.FIXED_MINSIZE|wx.LEFT|wx.RIGHT, 5 )				self.panelDegradation_units = wx.StaticText( self, wx.ID_ANY, u"% / year", wx.DefaultPosition, wx.DefaultSize, wx.ALIGN_LEFT )		self.panelDegradation_units.Wrap( -1 )		self.panelDegradation_units.SetFont( wx.Font( 10, 70, 90, 90, False, wx.EmptyString ) )				panelDegredation.Add( self.panelDegradation_units, 0, wx.ALIGN_CENTER_VERTICAL, 5 )						PanelParameterList.Add( panelDegredation, 1, wx.EXPAND, 5 )				panelArea = wx.FlexGridSizer( 1, 3, 0, 0 )		panelArea.SetFlexibleDirection( wx.HORIZONTAL )		panelArea.SetNonFlexibleGrowMode( wx.FLEX_GROWMODE_SPECIFIED )				self.panelArea_label = wx.StaticText( self, wx.ID_ANY, u"Area", wx.DefaultPosition, wx.DefaultSize, 0 )		self.panelArea_label.Wrap( -1 )		self.panelArea_label.SetFont( wx.Font( 10, 70, 90, 90, False, wx.EmptyString ) )				panelArea.Add( self.panelArea_label, 0, wx.ALIGN_CENTER_VERTICAL|wx.ALIGN_LEFT, 5 )				self.panelArea_input = wx.TextCtrl( self, wx.ID_ANY, wx.EmptyString, wx.DefaultPosition, wx.Size( 40,-1 ), wx.TE_LEFT|wx.TE_PROCESS_ENTER|wx.TE_PROCESS_TAB )		self.panelArea_input.SetMaxLength( 5 ) 		self.panelArea_input.SetFont( wx.Font( 10, 70, 90, 90, False, wx.EmptyString ) )				panelArea.Add( self.panelArea_input, 0, wx.ALIGN_LEFT|wx.FIXED_MINSIZE|wx.LEFT|wx.RIGHT, 5 )				self.panelArea_units = wx.StaticText( self, wx.ID_ANY, u"m2", wx.DefaultPosition, wx.DefaultSize, wx.ALIGN_LEFT )		self.panelArea_units.Wrap( -1 )		self.panelArea_units.SetFont( wx.Font( 10, 70, 90, 90, False, wx.EmptyString ) )				panelArea.Add( self.panelArea_units, 0, wx.ALIGN_CENTER_VERTICAL, 5 )						PanelParameterList.Add( panelArea, 1, wx.EXPAND, 5 )				panelCost = wx.FlexGridSizer( 1, 4, 0, 0 )		panelCost.SetFlexibleDirection( wx.HORIZONTAL )		panelCost.SetNonFlexibleGrowMode( wx.FLEX_GROWMODE_SPECIFIED )				self.panelCost_label = wx.StaticText( self, wx.ID_ANY, u"Cost", wx.DefaultPosition, wx.DefaultSize, 0 )		self.panelCost_label.Wrap( -1 )		self.panelCost_label.SetFont( wx.Font( 10, 70, 90, 90, False, wx.EmptyString ) )				panelCost.Add( self.panelCost_label, 0, wx.ALIGN_CENTER_VERTICAL|wx.ALIGN_LEFT, 5 )				self.panelCost_input = wx.TextCtrl( self, wx.ID_ANY, wx.EmptyString, wx.DefaultPosition, wx.Size( 40,-1 ), wx.TE_LEFT|wx.TE_PROCESS_ENTER|wx.TE_PROCESS_TAB )		self.panelCost_input.SetMaxLength( 5 ) 		self.panelCost_input.SetFont( wx.Font( 10, 70, 90, 90, False, wx.EmptyString ) )				panelCost.Add( self.panelCost_input, 0, wx.ALIGN_LEFT|wx.FIXED_MINSIZE|wx.LEFT|wx.RIGHT, 5 )				panelCost_currencyChoices = [ u"AED: United Arab Emirates Dirham", u"AFN: Afghan Afghani", u"ALL: Albanian Lek", u"AMD: Armenian Dram", u"AOA: Angolan Kwanza", u"ARS: Argentine Peso", u"AUD: Australian Dollar", u"AWG: Aruban Florin", u"AZN: Azerbaijani Manat", u"BAM: Bosnia-Herzegovina Convertible Mark", u"BBD: Barbadian Dollar", u"BDT: Bangladeshi Taka", u"BGN: Bulgarian Lev", u"BHD: Bahraini Dinar", u"BIF: Burundian Franc", u"BMD: Bermudan Dollar", u"BND: Brunei Dollar", u"BOB: Bolivian Boliviano", u"BRL: Brazilian Real", u"BSD: Bahamian Dollar", u"BTN: Bhutanese Ngultrum", u"BWP: Botswanan Pula", u"BYR: Belarusian Ruble", u"BZD: Belize Dollar", u"CAD: Canadian Dollar", u"CDF: Congolese Franc", u"CHF: Swiss Franc", u"CLP: Chilean Peso", u"CNY: Chinese Yuan", u"COP: Colombian Peso", u"CRC: Costa Rican Colón", u"CUP: Cuban Peso", u"CVE: Cape Verdean Escudo", u"CZK: Czech Republic Koruna", u"DJF: Djiboutian Franc", u"DKK: Danish Krone", u"DOP: Dominican Peso", u"DZD: Algerian Dinar", u"EEK: Estonian Kroon", u"EGP: Egyptian Pound", u"ETB: Ethiopian Birr", u"EUR: Euro" ]		self.panelCost_currency = wx.Choice( self, wx.ID_ANY, wx.DefaultPosition, wx.Size( 70,-1 ), panelCost_currencyChoices, 0 )		self.panelCost_currency.SetSelection( 0 )		self.panelCost_currency.SetFont( wx.Font( 10, 70, 90, 90, False, wx.EmptyString ) )				panelCost.Add( self.panelCost_currency, 0, wx.RIGHT, 5 )				self.panelCost_units = wx.StaticText( self, wx.ID_ANY, u"per panel", wx.DefaultPosition, wx.DefaultSize, wx.ALIGN_LEFT )		self.panelCost_units.Wrap( -1 )		self.panelCost_units.SetFont( wx.Font( 10, 70, 90, 90, False, wx.EmptyString ) )				panelCost.Add( self.panelCost_units, 0, wx.ALIGN_CENTER_VERTICAL, 5 )						PanelParameterList.Add( panelCost, 1, wx.EXPAND, 5 )				panelDepreciation = wx.FlexGridSizer( 1, 3, 0, 0 )		panelDepreciation.SetFlexibleDirection( wx.HORIZONTAL )		panelDepreciation.SetNonFlexibleGrowMode( wx.FLEX_GROWMODE_SPECIFIED )				self.panelDepreciation_label = wx.StaticText( self, wx.ID_ANY, u"Depreciation", wx.DefaultPosition, wx.DefaultSize, 0 )		self.panelDepreciation_label.Wrap( -1 )		self.panelDepreciation_label.SetFont( wx.Font( 10, 70, 90, 90, False, wx.EmptyString ) )				panelDepreciation.Add( self.panelDepreciation_label, 0, wx.ALIGN_CENTER_VERTICAL|wx.ALIGN_LEFT, 5 )				self.panelDepreciation_input = wx.TextCtrl( self, wx.ID_ANY, wx.EmptyString, wx.DefaultPosition, wx.Size( 40,-1 ), wx.TE_LEFT|wx.TE_PROCESS_ENTER|wx.TE_PROCESS_TAB )		self.panelDepreciation_input.SetMaxLength( 5 ) 		self.panelDepreciation_input.SetFont( wx.Font( 10, 70, 90, 90, False, wx.EmptyString ) )				panelDepreciation.Add( self.panelDepreciation_input, 0, wx.ALIGN_LEFT|wx.FIXED_MINSIZE|wx.LEFT|wx.RIGHT, 5 )				self.panelDepreciation_units = wx.StaticText( self, wx.ID_ANY, u"% / year", wx.DefaultPosition, wx.DefaultSize, wx.ALIGN_LEFT )		self.panelDepreciation_units.Wrap( -1 )		self.panelDepreciation_units.SetFont( wx.Font( 10, 70, 90, 90, False, wx.EmptyString ) )				panelDepreciation.Add( self.panelDepreciation_units, 0, wx.ALIGN_CENTER_VERTICAL, 5 )						PanelParameterList.Add( panelDepreciation, 1, wx.EXPAND, 5 )						PanelParameterContainer.Add( PanelParameterList, 1, 0, 1 )						ComponentParameterContainer.Add( PanelParameterContainer, 0, wx.FIXED_MINSIZE, 5 )				DCCableParameterContainer = wx.StaticBoxSizer( wx.StaticBox( self, wx.ID_ANY, u"DC Cables" ), wx.VERTICAL )				DCCableParameterList = wx.GridSizer( 5, 1, 3, 0 )				DCCableDiameter = wx.FlexGridSizer( 1, 3, 0, 0 )		DCCableDiameter.SetFlexibleDirection( wx.HORIZONTAL )		DCCableDiameter.SetNonFlexibleGrowMode( wx.FLEX_GROWMODE_SPECIFIED )				self.DCCableDiameter_label = wx.StaticText( self, wx.ID_ANY, u"Diameter", wx.DefaultPosition, wx.DefaultSize, 0 )		self.DCCableDiameter_label.Wrap( -1 )		self.DCCableDiameter_label.SetFont( wx.Font( 10, 70, 90, 90, False, wx.EmptyString ) )				DCCableDiameter.Add( self.DCCableDiameter_label, 0, wx.ALIGN_CENTER_VERTICAL|wx.ALIGN_LEFT, 5 )				self.DCCableDiameter_input = wx.TextCtrl( self, wx.ID_ANY, wx.EmptyString, wx.DefaultPosition, wx.Size( 40,-1 ), wx.TE_LEFT|wx.TE_PROCESS_ENTER|wx.TE_PROCESS_TAB )		self.DCCableDiameter_input.SetMaxLength( 5 ) 		self.DCCableDiameter_input.SetFont( wx.Font( 10, 70, 90, 90, False, wx.EmptyString ) )				DCCableDiameter.Add( self.DCCableDiameter_input, 0, wx.ALIGN_LEFT|wx.FIXED_MINSIZE|wx.LEFT|wx.RIGHT, 5 )				self.DCCableDiameter_units = wx.StaticText( self, wx.ID_ANY, u"mm", wx.DefaultPosition, wx.DefaultSize, wx.ALIGN_LEFT )		self.DCCableDiameter_units.Wrap( -1 )		self.DCCableDiameter_units.SetFont( wx.Font( 10, 70, 90, 90, False, wx.EmptyString ) )				DCCableDiameter.Add( self.DCCableDiameter_units, 0, wx.ALIGN_CENTER_VERTICAL, 5 )						DCCableParameterList.Add( DCCableDiameter, 1, wx.ALIGN_LEFT|wx.ALIGN_TOP|wx.FIXED_MINSIZE, 5 )				DCCableMaterial = wx.FlexGridSizer( 1, 3, 0, 0 )		DCCableMaterial.SetFlexibleDirection( wx.HORIZONTAL )		DCCableMaterial.SetNonFlexibleGrowMode( wx.FLEX_GROWMODE_SPECIFIED )				self.DCCableMaterial_label = wx.StaticText( self, wx.ID_ANY, u"Material", wx.DefaultPosition, wx.DefaultSize, 0 )		self.DCCableMaterial_label.Wrap( -1 )		self.DCCableMaterial_label.SetFont( wx.Font( 10, 70, 90, 90, False, wx.EmptyString ) )				DCCableMaterial.Add( self.DCCableMaterial_label, 0, wx.ALIGN_CENTER_VERTICAL|wx.ALIGN_LEFT, 5 )				DCCable_inputChoices = [ u"Copper", u"Aluminium" ]		self.DCCable_input = wx.Choice( self, wx.ID_ANY, wx.DefaultPosition, wx.DefaultSize, DCCable_inputChoices, 0 )		self.DCCable_input.SetSelection( 0 )		DCCableMaterial.Add( self.DCCable_input, 0, wx.LEFT|wx.RIGHT, 5 )						DCCableParameterList.Add( DCCableMaterial, 1, wx.ALIGN_LEFT|wx.ALIGN_TOP|wx.FIXED_MINSIZE, 5 )				DCCableLength = wx.FlexGridSizer( 1, 3, 0, 0 )		DCCableLength.SetFlexibleDirection( wx.HORIZONTAL )		DCCableLength.SetNonFlexibleGrowMode( wx.FLEX_GROWMODE_SPECIFIED )				self.DCCableLength_label = wx.StaticText( self, wx.ID_ANY, u"Length", wx.DefaultPosition, wx.DefaultSize, 0 )		self.DCCableLength_label.Wrap( -1 )		self.DCCableLength_label.SetFont( wx.Font( 10, 70, 90, 90, False, wx.EmptyString ) )				DCCableLength.Add( self.DCCableLength_label, 0, wx.ALIGN_CENTER_VERTICAL|wx.ALIGN_LEFT, 5 )				self.DCCableLength_input = wx.TextCtrl( self, wx.ID_ANY, wx.EmptyString, wx.DefaultPosition, wx.Size( 40,-1 ), wx.TE_LEFT|wx.TE_PROCESS_ENTER|wx.TE_PROCESS_TAB )		self.DCCableLength_input.SetMaxLength( 5 ) 		self.DCCableLength_input.SetFont( wx.Font( 10, 70, 90, 90, False, wx.EmptyString ) )				DCCableLength.Add( self.DCCableLength_input, 0, wx.ALIGN_LEFT|wx.FIXED_MINSIZE|wx.LEFT|wx.RIGHT, 5 )				self.DCCableLength_units = wx.StaticText( self, wx.ID_ANY, u"m", wx.DefaultPosition, wx.DefaultSize, wx.ALIGN_LEFT )		self.DCCableLength_units.Wrap( -1 )		self.DCCableLength_units.SetFont( wx.Font( 10, 70, 90, 90, False, wx.EmptyString ) )				DCCableLength.Add( self.DCCableLength_units, 0, wx.ALIGN_CENTER_VERTICAL, 5 )						DCCableParameterList.Add( DCCableLength, 1, wx.EXPAND, 5 )				DCCableCost = wx.FlexGridSizer( 1, 4, 0, 0 )		DCCableCost.SetFlexibleDirection( wx.HORIZONTAL )		DCCableCost.SetNonFlexibleGrowMode( wx.FLEX_GROWMODE_SPECIFIED )				self.DCCableCost_label = wx.StaticText( self, wx.ID_ANY, u"Cost", wx.DefaultPosition, wx.DefaultSize, 0 )		self.DCCableCost_label.Wrap( -1 )		self.DCCableCost_label.SetFont( wx.Font( 10, 70, 90, 90, False, wx.EmptyString ) )				DCCableCost.Add( self.DCCableCost_label, 0, wx.ALIGN_CENTER_VERTICAL|wx.ALIGN_LEFT, 5 )				self.DCCableCost_input = wx.TextCtrl( self, wx.ID_ANY, wx.EmptyString, wx.DefaultPosition, wx.Size( 40,-1 ), wx.TE_LEFT|wx.TE_PROCESS_ENTER|wx.TE_PROCESS_TAB )		self.DCCableCost_input.SetMaxLength( 5 ) 		self.DCCableCost_input.SetFont( wx.Font( 10, 70, 90, 90, False, wx.EmptyString ) )				DCCableCost.Add( self.DCCableCost_input, 0, wx.ALIGN_LEFT|wx.FIXED_MINSIZE|wx.LEFT|wx.RIGHT, 5 )				DCCableCost_currencyChoices = [ u"AED: United Arab Emirates Dirham", u"AFN: Afghan Afghani", u"ALL: Albanian Lek", u"AMD: Armenian Dram", u"AOA: Angolan Kwanza", u"ARS: Argentine Peso", u"AUD: Australian Dollar", u"AWG: Aruban Florin", u"AZN: Azerbaijani Manat", u"BAM: Bosnia-Herzegovina Convertible Mark", u"BBD: Barbadian Dollar", u"BDT: Bangladeshi Taka", u"BGN: Bulgarian Lev", u"BHD: Bahraini Dinar", u"BIF: Burundian Franc", u"BMD: Bermudan Dollar", u"BND: Brunei Dollar", u"BOB: Bolivian Boliviano", u"BRL: Brazilian Real", u"BSD: Bahamian Dollar", u"BTN: Bhutanese Ngultrum", u"BWP: Botswanan Pula", u"BYR: Belarusian Ruble", u"BZD: Belize Dollar", u"CAD: Canadian Dollar", u"CDF: Congolese Franc", u"CHF: Swiss Franc", u"CLP: Chilean Peso", u"CNY: Chinese Yuan", u"COP: Colombian Peso", u"CRC: Costa Rican Colón", u"CUP: Cuban Peso", u"CVE: Cape Verdean Escudo", u"CZK: Czech Republic Koruna", u"DJF: Djiboutian Franc", u"DKK: Danish Krone", u"DOP: Dominican Peso", u"DZD: Algerian Dinar", u"EEK: Estonian Kroon", u"EGP: Egyptian Pound", u"ETB: Ethiopian Birr", u"EUR: Euro" ]		self.DCCableCost_currency = wx.Choice( self, wx.ID_ANY, wx.DefaultPosition, wx.Size( 70,-1 ), DCCableCost_currencyChoices, 0 )		self.DCCableCost_currency.SetSelection( 0 )		self.DCCableCost_currency.SetFont( wx.Font( 10, 70, 90, 90, False, wx.EmptyString ) )				DCCableCost.Add( self.DCCableCost_currency, 0, wx.RIGHT, 5 )				self.DCCableCost_units = wx.StaticText( self, wx.ID_ANY, u"per m", wx.DefaultPosition, wx.DefaultSize, wx.ALIGN_LEFT )		self.DCCableCost_units.Wrap( -1 )		self.DCCableCost_units.SetFont( wx.Font( 10, 70, 90, 90, False, wx.EmptyString ) )				DCCableCost.Add( self.DCCableCost_units, 0, wx.ALIGN_CENTER_VERTICAL, 5 )						DCCableParameterList.Add( DCCableCost, 1, wx.EXPAND, 5 )				DCCableDepreciation = wx.FlexGridSizer( 1, 3, 0, 0 )		DCCableDepreciation.SetFlexibleDirection( wx.HORIZONTAL )		DCCableDepreciation.SetNonFlexibleGrowMode( wx.FLEX_GROWMODE_SPECIFIED )				self.DCCableDepreciation_label = wx.StaticText( self, wx.ID_ANY, u"Depreciation", wx.DefaultPosition, wx.DefaultSize, 0 )		self.DCCableDepreciation_label.Wrap( -1 )		self.DCCableDepreciation_label.SetFont( wx.Font( 10, 70, 90, 90, False, wx.EmptyString ) )				DCCableDepreciation.Add( self.DCCableDepreciation_label, 0, wx.ALIGN_CENTER_VERTICAL|wx.ALIGN_LEFT, 5 )				self.DCCableDepreciation_input = wx.TextCtrl( self, wx.ID_ANY, wx.EmptyString, wx.DefaultPosition, wx.Size( 40,-1 ), wx.TE_LEFT|wx.TE_PROCESS_ENTER|wx.TE_PROCESS_TAB )		self.DCCableDepreciation_input.SetMaxLength( 5 ) 		self.DCCableDepreciation_input.SetFont( wx.Font( 10, 70, 90, 90, False, wx.EmptyString ) )				DCCableDepreciation.Add( self.DCCableDepreciation_input, 0, wx.ALIGN_LEFT|wx.FIXED_MINSIZE|wx.LEFT|wx.RIGHT, 5 )				self.DCCableDepreciation_units = wx.StaticText( self, wx.ID_ANY, u"% / year", wx.DefaultPosition, wx.DefaultSize, wx.ALIGN_LEFT )		self.DCCableDepreciation_units.Wrap( -1 )		self.DCCableDepreciation_units.SetFont( wx.Font( 10, 70, 90, 90, False, wx.EmptyString ) )				DCCableDepreciation.Add( self.DCCableDepreciation_units, 0, wx.ALIGN_CENTER_VERTICAL, 5 )						DCCableParameterList.Add( DCCableDepreciation, 1, wx.EXPAND, 5 )						DCCableParameterContainer.Add( DCCableParameterList, 1, 0, 5 )						ComponentParameterContainer.Add( DCCableParameterContainer, 0, wx.FIXED_MINSIZE, 5 )				InverterParameterContainer = wx.StaticBoxSizer( wx.StaticBox( self, wx.ID_ANY, u"Inverter" ), wx.VERTICAL )				InverterParameterList = wx.GridSizer( 5, 1, 3, 0 )				inverterPowerFactor = wx.FlexGridSizer( 1, 3, 0, 0 )		inverterPowerFactor.SetFlexibleDirection( wx.HORIZONTAL )		inverterPowerFactor.SetNonFlexibleGrowMode( wx.FLEX_GROWMODE_SPECIFIED )				self.inverterPF_label = wx.StaticText( self, wx.ID_ANY, u"Power Factor", wx.DefaultPosition, wx.DefaultSize, 0 )		self.inverterPF_label.Wrap( -1 )		self.inverterPF_label.SetFont( wx.Font( 10, 70, 90, 90, False, wx.EmptyString ) )				inverterPowerFactor.Add( self.inverterPF_label, 0, wx.ALIGN_CENTER_VERTICAL|wx.ALIGN_LEFT, 5 )				self.inverterPF_input = wx.TextCtrl( self, wx.ID_ANY, wx.EmptyString, wx.DefaultPosition, wx.Size( 40,-1 ), wx.TE_LEFT|wx.TE_PROCESS_ENTER|wx.TE_PROCESS_TAB )		self.inverterPF_input.SetMaxLength( 5 ) 		self.inverterPF_input.SetFont( wx.Font( 10, 70, 90, 90, False, wx.EmptyString ) )				inverterPowerFactor.Add( self.inverterPF_input, 0, wx.ALIGN_LEFT|wx.FIXED_MINSIZE|wx.LEFT|wx.RIGHT, 5 )				self.inverterPF_units = wx.StaticText( self, wx.ID_ANY, u"%", wx.DefaultPosition, wx.DefaultSize, wx.ALIGN_LEFT )		self.inverterPF_units.Wrap( -1 )		self.inverterPF_units.SetFont( wx.Font( 10, 70, 90, 90, False, wx.EmptyString ) )				inverterPowerFactor.Add( self.inverterPF_units, 0, wx.ALIGN_CENTER_VERTICAL, 5 )						InverterParameterList.Add( inverterPowerFactor, 1, wx.ALIGN_LEFT|wx.ALIGN_TOP|wx.FIXED_MINSIZE, 5 )				inverterEfficiency = wx.FlexGridSizer( 1, 3, 0, 0 )		inverterEfficiency.SetFlexibleDirection( wx.HORIZONTAL )		inverterEfficiency.SetNonFlexibleGrowMode( wx.FLEX_GROWMODE_SPECIFIED )				self.inverterEfficiency_label = wx.StaticText( self, wx.ID_ANY, u"Effciency", wx.DefaultPosition, wx.DefaultSize, 0 )		self.inverterEfficiency_label.Wrap( -1 )		self.inverterEfficiency_label.SetFont( wx.Font( 10, 70, 90, 90, False, wx.EmptyString ) )				inverterEfficiency.Add( self.inverterEfficiency_label, 0, wx.ALIGN_CENTER_VERTICAL|wx.ALIGN_LEFT, 5 )				self.inverterEfficiency_input = wx.TextCtrl( self, wx.ID_ANY, wx.EmptyString, wx.DefaultPosition, wx.Size( 40,-1 ), wx.TE_LEFT|wx.TE_PROCESS_ENTER|wx.TE_PROCESS_TAB )		self.inverterEfficiency_input.SetMaxLength( 5 ) 		self.inverterEfficiency_input.SetFont( wx.Font( 10, 70, 90, 90, False, wx.EmptyString ) )				inverterEfficiency.Add( self.inverterEfficiency_input, 0, wx.LEFT|wx.RIGHT, 5 )				self.inverterEfficiency_units = wx.StaticText( self, wx.ID_ANY, u"%", wx.DefaultPosition, wx.DefaultSize, wx.ALIGN_LEFT )		self.inverterEfficiency_units.Wrap( -1 )		self.inverterEfficiency_units.SetFont( wx.Font( 10, 70, 90, 90, False, wx.EmptyString ) )				inverterEfficiency.Add( self.inverterEfficiency_units, 0, wx.ALIGN_CENTER_VERTICAL, 5 )						InverterParameterList.Add( inverterEfficiency, 1, wx.ALIGN_LEFT|wx.ALIGN_TOP|wx.FIXED_MINSIZE, 5 )				inverterOuputVoltage = wx.FlexGridSizer( 1, 3, 0, 0 )		inverterOuputVoltage.SetFlexibleDirection( wx.HORIZONTAL )		inverterOuputVoltage.SetNonFlexibleGrowMode( wx.FLEX_GROWMODE_SPECIFIED )				self.inverterOuputVoltage_label = wx.StaticText( self, wx.ID_ANY, u"Output Voltage", wx.DefaultPosition, wx.DefaultSize, 0 )		self.inverterOuputVoltage_label.Wrap( -1 )		self.inverterOuputVoltage_label.SetFont( wx.Font( 10, 70, 90, 90, False, wx.EmptyString ) )				inverterOuputVoltage.Add( self.inverterOuputVoltage_label, 0, wx.ALIGN_CENTER_VERTICAL|wx.ALIGN_LEFT, 5 )				self.inverterOuputVoltage_input = wx.TextCtrl( self, wx.ID_ANY, wx.EmptyString, wx.DefaultPosition, wx.Size( 40,-1 ), wx.TE_LEFT|wx.TE_PROCESS_ENTER|wx.TE_PROCESS_TAB )		self.inverterOuputVoltage_input.SetMaxLength( 5 ) 		self.inverterOuputVoltage_input.SetFont( wx.Font( 10, 70, 90, 90, False, wx.EmptyString ) )				inverterOuputVoltage.Add( self.inverterOuputVoltage_input, 0, wx.ALIGN_LEFT|wx.FIXED_MINSIZE|wx.LEFT|wx.RIGHT, 5 )				self.inverterOuputVoltage_units = wx.StaticText( self, wx.ID_ANY, u"V (AC)", wx.DefaultPosition, wx.DefaultSize, wx.ALIGN_LEFT )		self.inverterOuputVoltage_units.Wrap( -1 )		self.inverterOuputVoltage_units.SetFont( wx.Font( 10, 70, 90, 90, False, wx.EmptyString ) )				inverterOuputVoltage.Add( self.inverterOuputVoltage_units, 0, wx.ALIGN_CENTER_VERTICAL, 5 )						InverterParameterList.Add( inverterOuputVoltage, 1, wx.EXPAND, 5 )				inverterCost = wx.FlexGridSizer( 1, 4, 0, 0 )		inverterCost.SetFlexibleDirection( wx.HORIZONTAL )		inverterCost.SetNonFlexibleGrowMode( wx.FLEX_GROWMODE_SPECIFIED )				self.inverterCost_label = wx.StaticText( self, wx.ID_ANY, u"Cost", wx.DefaultPosition, wx.DefaultSize, 0 )		self.inverterCost_label.Wrap( -1 )		self.inverterCost_label.SetFont( wx.Font( 10, 70, 90, 90, False, wx.EmptyString ) )				inverterCost.Add( self.inverterCost_label, 0, wx.ALIGN_CENTER_VERTICAL|wx.ALIGN_LEFT, 5 )				self.inverterCost_input = wx.TextCtrl( self, wx.ID_ANY, wx.EmptyString, wx.DefaultPosition, wx.Size( 40,-1 ), wx.TE_LEFT|wx.TE_PROCESS_ENTER|wx.TE_PROCESS_TAB )		self.inverterCost_input.SetMaxLength( 5 ) 		self.inverterCost_input.SetFont( wx.Font( 10, 70, 90, 90, False, wx.EmptyString ) )				inverterCost.Add( self.inverterCost_input, 0, wx.ALIGN_LEFT|wx.FIXED_MINSIZE|wx.LEFT|wx.RIGHT, 5 )				inverterCost_currencyChoices = [ u"AED: United Arab Emirates Dirham", u"AFN: Afghan Afghani", u"ALL: Albanian Lek", u"AMD: Armenian Dram", u"AOA: Angolan Kwanza", u"ARS: Argentine Peso", u"AUD: Australian Dollar", u"AWG: Aruban Florin", u"AZN: Azerbaijani Manat", u"BAM: Bosnia-Herzegovina Convertible Mark", u"BBD: Barbadian Dollar", u"BDT: Bangladeshi Taka", u"BGN: Bulgarian Lev", u"BHD: Bahraini Dinar", u"BIF: Burundian Franc", u"BMD: Bermudan Dollar", u"BND: Brunei Dollar", u"BOB: Bolivian Boliviano", u"BRL: Brazilian Real", u"BSD: Bahamian Dollar", u"BTN: Bhutanese Ngultrum", u"BWP: Botswanan Pula", u"BYR: Belarusian Ruble", u"BZD: Belize Dollar", u"CAD: Canadian Dollar", u"CDF: Congolese Franc", u"CHF: Swiss Franc", u"CLP: Chilean Peso", u"CNY: Chinese Yuan", u"COP: Colombian Peso", u"CRC: Costa Rican Colón", u"CUP: Cuban Peso", u"CVE: Cape Verdean Escudo", u"CZK: Czech Republic Koruna", u"DJF: Djiboutian Franc", u"DKK: Danish Krone", u"DOP: Dominican Peso", u"DZD: Algerian Dinar", u"EEK: Estonian Kroon", u"EGP: Egyptian Pound", u"ETB: Ethiopian Birr", u"EUR: Euro" ]		self.inverterCost_currency = wx.Choice( self, wx.ID_ANY, wx.DefaultPosition, wx.Size( 70,-1 ), inverterCost_currencyChoices, 0 )		self.inverterCost_currency.SetSelection( 0 )		self.inverterCost_currency.SetFont( wx.Font( 10, 70, 90, 90, False, wx.EmptyString ) )				inverterCost.Add( self.inverterCost_currency, 0, wx.RIGHT, 5 )				self.inverterCost_units = wx.StaticText( self, wx.ID_ANY, u"per unit", wx.DefaultPosition, wx.DefaultSize, wx.ALIGN_LEFT )		self.inverterCost_units.Wrap( -1 )		self.inverterCost_units.SetFont( wx.Font( 10, 70, 90, 90, False, wx.EmptyString ) )				inverterCost.Add( self.inverterCost_units, 0, wx.ALIGN_CENTER_VERTICAL, 5 )						InverterParameterList.Add( inverterCost, 1, wx.EXPAND, 5 )				inverterDepreciation = wx.FlexGridSizer( 1, 3, 0, 0 )		inverterDepreciation.SetFlexibleDirection( wx.HORIZONTAL )		inverterDepreciation.SetNonFlexibleGrowMode( wx.FLEX_GROWMODE_SPECIFIED )				self.inverterDepreciation_label = wx.StaticText( self, wx.ID_ANY, u"Depreciation", wx.DefaultPosition, wx.DefaultSize, 0 )		self.inverterDepreciation_label.Wrap( -1 )		self.inverterDepreciation_label.SetFont( wx.Font( 10, 70, 90, 90, False, wx.EmptyString ) )				inverterDepreciation.Add( self.inverterDepreciation_label, 0, wx.ALIGN_CENTER_VERTICAL|wx.ALIGN_LEFT, 5 )				self.inverterDepreciation_input = wx.TextCtrl( self, wx.ID_ANY, wx.EmptyString, wx.DefaultPosition, wx.Size( 40,-1 ), wx.TE_LEFT|wx.TE_PROCESS_ENTER|wx.TE_PROCESS_TAB )		self.inverterDepreciation_input.SetMaxLength( 5 ) 		self.inverterDepreciation_input.SetFont( wx.Font( 10, 70, 90, 90, False, wx.EmptyString ) )				inverterDepreciation.Add( self.inverterDepreciation_input, 0, wx.ALIGN_LEFT|wx.FIXED_MINSIZE|wx.LEFT|wx.RIGHT, 5 )				self.inverterDepreciation_units = wx.StaticText( self, wx.ID_ANY, u"% / year", wx.DefaultPosition, wx.DefaultSize, wx.ALIGN_LEFT )		self.inverterDepreciation_units.Wrap( -1 )		self.inverterDepreciation_units.SetFont( wx.Font( 10, 70, 90, 90, False, wx.EmptyString ) )				inverterDepreciation.Add( self.inverterDepreciation_units, 0, wx.ALIGN_CENTER_VERTICAL, 5 )						InverterParameterList.Add( inverterDepreciation, 1, wx.EXPAND, 5 )						InverterParameterContainer.Add( InverterParameterList, 1, 0, 5 )						ComponentParameterContainer.Add( InverterParameterContainer, 0, wx.FIXED_MINSIZE, 5 )				ACCableParameterContainer = wx.StaticBoxSizer( wx.StaticBox( self, wx.ID_ANY, u"AC Cables" ), wx.VERTICAL )				ACCableParameterList = wx.GridSizer( 5, 1, 3, 0 )				ACCableDiameter = wx.FlexGridSizer( 1, 3, 0, 0 )		ACCableDiameter.SetFlexibleDirection( wx.HORIZONTAL )		ACCableDiameter.SetNonFlexibleGrowMode( wx.FLEX_GROWMODE_SPECIFIED )				self.ACCableDiameter_label = wx.StaticText( self, wx.ID_ANY, u"Diameter", wx.DefaultPosition, wx.DefaultSize, 0 )		self.ACCableDiameter_label.Wrap( -1 )		self.ACCableDiameter_label.SetFont( wx.Font( 10, 70, 90, 90, False, wx.EmptyString ) )				ACCableDiameter.Add( self.ACCableDiameter_label, 0, wx.ALIGN_CENTER_VERTICAL|wx.ALIGN_LEFT, 5 )				self.ACCableDiameter_input = wx.TextCtrl( self, wx.ID_ANY, wx.EmptyString, wx.DefaultPosition, wx.Size( 40,-1 ), wx.TE_LEFT|wx.TE_PROCESS_ENTER|wx.TE_PROCESS_TAB )		self.ACCableDiameter_input.SetMaxLength( 5 ) 		self.ACCableDiameter_input.SetFont( wx.Font( 10, 70, 90, 90, False, wx.EmptyString ) )				ACCableDiameter.Add( self.ACCableDiameter_input, 0, wx.ALIGN_LEFT|wx.FIXED_MINSIZE|wx.LEFT|wx.RIGHT, 5 )				self.ACCableDiameter_units = wx.StaticText( self, wx.ID_ANY, u"mm", wx.DefaultPosition, wx.DefaultSize, wx.ALIGN_LEFT )		self.ACCableDiameter_units.Wrap( -1 )		self.ACCableDiameter_units.SetFont( wx.Font( 10, 70, 90, 90, False, wx.EmptyString ) )				ACCableDiameter.Add( self.ACCableDiameter_units, 0, wx.ALIGN_CENTER_VERTICAL, 5 )						ACCableParameterList.Add( ACCableDiameter, 1, wx.ALIGN_LEFT|wx.ALIGN_TOP|wx.FIXED_MINSIZE, 5 )				ACCableMaterial = wx.FlexGridSizer( 1, 3, 0, 0 )		ACCableMaterial.SetFlexibleDirection( wx.HORIZONTAL )		ACCableMaterial.SetNonFlexibleGrowMode( wx.FLEX_GROWMODE_SPECIFIED )				self.ACCableMaterial_label = wx.StaticText( self, wx.ID_ANY, u"Material", wx.DefaultPosition, wx.DefaultSize, 0 )		self.ACCableMaterial_label.Wrap( -1 )		self.ACCableMaterial_label.SetFont( wx.Font( 10, 70, 90, 90, False, wx.EmptyString ) )				ACCableMaterial.Add( self.ACCableMaterial_label, 0, wx.ALIGN_CENTER_VERTICAL|wx.ALIGN_LEFT, 5 )				ACCable_inputChoices = [ u"Copper", u"Aluminium" ]		self.ACCable_input = wx.Choice( self, wx.ID_ANY, wx.DefaultPosition, wx.DefaultSize, ACCable_inputChoices, 0 )		self.ACCable_input.SetSelection( 0 )		ACCableMaterial.Add( self.ACCable_input, 0, wx.LEFT|wx.RIGHT, 5 )						ACCableParameterList.Add( ACCableMaterial, 1, wx.ALIGN_LEFT|wx.ALIGN_TOP|wx.FIXED_MINSIZE, 5 )				ACCableLength = wx.FlexGridSizer( 1, 3, 0, 0 )		ACCableLength.SetFlexibleDirection( wx.HORIZONTAL )		ACCableLength.SetNonFlexibleGrowMode( wx.FLEX_GROWMODE_SPECIFIED )				self.ACCableLength_label = wx.StaticText( self, wx.ID_ANY, u"Length", wx.DefaultPosition, wx.DefaultSize, 0 )		self.ACCableLength_label.Wrap( -1 )		self.ACCableLength_label.SetFont( wx.Font( 10, 70, 90, 90, False, wx.EmptyString ) )				ACCableLength.Add( self.ACCableLength_label, 0, wx.ALIGN_CENTER_VERTICAL|wx.ALIGN_LEFT, 5 )				self.ACCableLength_input = wx.TextCtrl( self, wx.ID_ANY, wx.EmptyString, wx.DefaultPosition, wx.Size( 40,-1 ), wx.TE_LEFT|wx.TE_PROCESS_ENTER|wx.TE_PROCESS_TAB )		self.ACCableLength_input.SetMaxLength( 5 ) 		self.ACCableLength_input.SetFont( wx.Font( 10, 70, 90, 90, False, wx.EmptyString ) )				ACCableLength.Add( self.ACCableLength_input, 0, wx.ALIGN_LEFT|wx.FIXED_MINSIZE|wx.LEFT|wx.RIGHT, 5 )				self.ACCableLength_units = wx.StaticText( self, wx.ID_ANY, u"m", wx.DefaultPosition, wx.DefaultSize, wx.ALIGN_LEFT )		self.ACCableLength_units.Wrap( -1 )		self.ACCableLength_units.SetFont( wx.Font( 10, 70, 90, 90, False, wx.EmptyString ) )				ACCableLength.Add( self.ACCableLength_units, 0, wx.ALIGN_CENTER_VERTICAL, 5 )						ACCableParameterList.Add( ACCableLength, 1, wx.EXPAND, 5 )				ACCableCost = wx.FlexGridSizer( 1, 4, 0, 0 )		ACCableCost.SetFlexibleDirection( wx.HORIZONTAL )		ACCableCost.SetNonFlexibleGrowMode( wx.FLEX_GROWMODE_SPECIFIED )				self.ACCableCost_label = wx.StaticText( self, wx.ID_ANY, u"Cost", wx.DefaultPosition, wx.DefaultSize, 0 )		self.ACCableCost_label.Wrap( -1 )		self.ACCableCost_label.SetFont( wx.Font( 10, 70, 90, 90, False, wx.EmptyString ) )				ACCableCost.Add( self.ACCableCost_label, 0, wx.ALIGN_CENTER_VERTICAL|wx.ALIGN_LEFT, 5 )				self.ACCableCost_input = wx.TextCtrl( self, wx.ID_ANY, wx.EmptyString, wx.DefaultPosition, wx.Size( 40,-1 ), wx.TE_LEFT|wx.TE_PROCESS_ENTER|wx.TE_PROCESS_TAB )		self.ACCableCost_input.SetMaxLength( 5 ) 		self.ACCableCost_input.SetFont( wx.Font( 10, 70, 90, 90, False, wx.EmptyString ) )				ACCableCost.Add( self.ACCableCost_input, 0, wx.ALIGN_LEFT|wx.FIXED_MINSIZE|wx.LEFT|wx.RIGHT, 5 )				ACCableCost_currencyChoices = [ u"AED: United Arab Emirates Dirham", u"AFN: Afghan Afghani", u"ALL: Albanian Lek", u"AMD: Armenian Dram", u"AOA: Angolan Kwanza", u"ARS: Argentine Peso", u"AUD: Australian Dollar", u"AWG: Aruban Florin", u"AZN: Azerbaijani Manat", u"BAM: Bosnia-Herzegovina Convertible Mark", u"BBD: Barbadian Dollar", u"BDT: Bangladeshi Taka", u"BGN: Bulgarian Lev", u"BHD: Bahraini Dinar", u"BIF: Burundian Franc", u"BMD: Bermudan Dollar", u"BND: Brunei Dollar", u"BOB: Bolivian Boliviano", u"BRL: Brazilian Real", u"BSD: Bahamian Dollar", u"BTN: Bhutanese Ngultrum", u"BWP: Botswanan Pula", u"BYR: Belarusian Ruble", u"BZD: Belize Dollar", u"CAD: Canadian Dollar", u"CDF: Congolese Franc", u"CHF: Swiss Franc", u"CLP: Chilean Peso", u"CNY: Chinese Yuan", u"COP: Colombian Peso", u"CRC: Costa Rican Colón", u"CUP: Cuban Peso", u"CVE: Cape Verdean Escudo", u"CZK: Czech Republic Koruna", u"DJF: Djiboutian Franc", u"DKK: Danish Krone", u"DOP: Dominican Peso", u"DZD: Algerian Dinar", u"EEK: Estonian Kroon", u"EGP: Egyptian Pound", u"ETB: Ethiopian Birr", u"EUR: Euro" ]		self.ACCableCost_currency = wx.Choice( self, wx.ID_ANY, wx.DefaultPosition, wx.Size( 70,-1 ), ACCableCost_currencyChoices, 0 )		self.ACCableCost_currency.SetSelection( 0 )		self.ACCableCost_currency.SetFont( wx.Font( 10, 70, 90, 90, False, wx.EmptyString ) )				ACCableCost.Add( self.ACCableCost_currency, 0, wx.RIGHT, 5 )				self.ACCableCost_units = wx.StaticText( self, wx.ID_ANY, u"per m", wx.DefaultPosition, wx.DefaultSize, wx.ALIGN_LEFT )		self.ACCableCost_units.Wrap( -1 )		self.ACCableCost_units.SetFont( wx.Font( 10, 70, 90, 90, False, wx.EmptyString ) )				ACCableCost.Add( self.ACCableCost_units, 0, wx.ALIGN_CENTER_VERTICAL, 5 )						ACCableParameterList.Add( ACCableCost, 1, wx.EXPAND, 5 )				ACCableDepreciation = wx.FlexGridSizer( 1, 3, 0, 0 )		ACCableDepreciation.SetFlexibleDirection( wx.HORIZONTAL )		ACCableDepreciation.SetNonFlexibleGrowMode( wx.FLEX_GROWMODE_SPECIFIED )				self.ACCableDepreciation_label = wx.StaticText( self, wx.ID_ANY, u"Depreciation", wx.DefaultPosition, wx.DefaultSize, 0 )		self.ACCableDepreciation_label.Wrap( -1 )		self.ACCableDepreciation_label.SetFont( wx.Font( 10, 70, 90, 90, False, wx.EmptyString ) )				ACCableDepreciation.Add( self.ACCableDepreciation_label, 0, wx.ALIGN_CENTER_VERTICAL|wx.ALIGN_LEFT, 5 )				self.ACCableDepreciation_input = wx.TextCtrl( self, wx.ID_ANY, wx.EmptyString, wx.DefaultPosition, wx.Size( 40,-1 ), wx.TE_LEFT|wx.TE_PROCESS_ENTER|wx.TE_PROCESS_TAB )		self.ACCableDepreciation_input.SetMaxLength( 5 ) 		self.ACCableDepreciation_input.SetFont( wx.Font( 10, 70, 90, 90, False, wx.EmptyString ) )				ACCableDepreciation.Add( self.ACCableDepreciation_input, 0, wx.ALIGN_LEFT|wx.FIXED_MINSIZE|wx.LEFT|wx.RIGHT, 5 )				self.ACCableDepreciation_units = wx.StaticText( self, wx.ID_ANY, u"% / year", wx.DefaultPosition, wx.DefaultSize, wx.ALIGN_LEFT )		self.ACCableDepreciation_units.Wrap( -1 )		self.ACCableDepreciation_units.SetFont( wx.Font( 10, 70, 90, 90, False, wx.EmptyString ) )				ACCableDepreciation.Add( self.ACCableDepreciation_units, 0, wx.ALIGN_CENTER_VERTICAL, 5 )						ACCableParameterList.Add( ACCableDepreciation, 1, wx.EXPAND, 5 )						ACCableParameterContainer.Add( ACCableParameterList, 1, wx.EXPAND, 5 )						ComponentParameterContainer.Add( ACCableParameterContainer, 1, wx.FIXED_MINSIZE, 5 )				TransformerParameterContainer = wx.StaticBoxSizer( wx.StaticBox( self, wx.ID_ANY, u"Transformer" ), wx.VERTICAL )				TransformerParameterList = wx.GridSizer( 5, 1, 3, 0 )				transformerOuputVoltage = wx.FlexGridSizer( 1, 3, 0, 0 )		transformerOuputVoltage.SetFlexibleDirection( wx.HORIZONTAL )		transformerOuputVoltage.SetNonFlexibleGrowMode( wx.FLEX_GROWMODE_SPECIFIED )				self.transformerOuputVoltage_label = wx.StaticText( self, wx.ID_ANY, u"Output Voltage", wx.DefaultPosition, wx.DefaultSize, 0 )		self.transformerOuputVoltage_label.Wrap( -1 )		self.transformerOuputVoltage_label.SetFont( wx.Font( 10, 70, 90, 90, False, wx.EmptyString ) )				transformerOuputVoltage.Add( self.transformerOuputVoltage_label, 0, wx.ALIGN_CENTER_VERTICAL|wx.ALIGN_LEFT, 5 )				self.transformerOuputVoltage_input = wx.TextCtrl( self, wx.ID_ANY, wx.EmptyString, wx.DefaultPosition, wx.Size( 40,-1 ), wx.TE_LEFT|wx.TE_PROCESS_ENTER|wx.TE_PROCESS_TAB )		self.transformerOuputVoltage_input.SetMaxLength( 5 ) 		self.transformerOuputVoltage_input.SetFont( wx.Font( 10, 70, 90, 90, False, wx.EmptyString ) )				transformerOuputVoltage.Add( self.transformerOuputVoltage_input, 0, wx.ALIGN_LEFT|wx.FIXED_MINSIZE|wx.LEFT|wx.RIGHT, 5 )				self.transformerOuputVoltage_units = wx.StaticText( self, wx.ID_ANY, u"V (AC)", wx.DefaultPosition, wx.DefaultSize, wx.ALIGN_LEFT )		self.transformerOuputVoltage_units.Wrap( -1 )		self.transformerOuputVoltage_units.SetFont( wx.Font( 10, 70, 90, 90, False, wx.EmptyString ) )				transformerOuputVoltage.Add( self.transformerOuputVoltage_units, 0, wx.ALIGN_CENTER_VERTICAL, 5 )						TransformerParameterList.Add( transformerOuputVoltage, 1, wx.EXPAND, 5 )				transformerEfficiency = wx.FlexGridSizer( 1, 3, 0, 0 )		transformerEfficiency.SetFlexibleDirection( wx.HORIZONTAL )		transformerEfficiency.SetNonFlexibleGrowMode( wx.FLEX_GROWMODE_SPECIFIED )				self.transformerEfficiency_label = wx.StaticText( self, wx.ID_ANY, u"Effciency", wx.DefaultPosition, wx.DefaultSize, 0 )		self.transformerEfficiency_label.Wrap( -1 )		self.transformerEfficiency_label.SetFont( wx.Font( 10, 70, 90, 90, False, wx.EmptyString ) )				transformerEfficiency.Add( self.transformerEfficiency_label, 0, wx.ALIGN_CENTER_VERTICAL|wx.ALIGN_LEFT, 5 )				self.transformerEfficiency_input = wx.TextCtrl( self, wx.ID_ANY, wx.EmptyString, wx.DefaultPosition, wx.Size( 40,-1 ), wx.TE_LEFT|wx.TE_PROCESS_ENTER|wx.TE_PROCESS_TAB )		self.transformerEfficiency_input.SetMaxLength( 5 ) 		self.transformerEfficiency_input.SetFont( wx.Font( 10, 70, 90, 90, False, wx.EmptyString ) )				transformerEfficiency.Add( self.transformerEfficiency_input, 0, wx.LEFT|wx.RIGHT, 5 )				self.transformerEfficiency_units = wx.StaticText( self, wx.ID_ANY, u"%", wx.DefaultPosition, wx.DefaultSize, wx.ALIGN_LEFT )		self.transformerEfficiency_units.Wrap( -1 )		self.transformerEfficiency_units.SetFont( wx.Font( 10, 70, 90, 90, False, wx.EmptyString ) )				transformerEfficiency.Add( self.transformerEfficiency_units, 0, wx.ALIGN_CENTER_VERTICAL, 5 )						TransformerParameterList.Add( transformerEfficiency, 1, wx.ALIGN_LEFT|wx.ALIGN_TOP|wx.FIXED_MINSIZE, 5 )				transformerRating = wx.FlexGridSizer( 1, 3, 0, 0 )		transformerRating.SetFlexibleDirection( wx.HORIZONTAL )		transformerRating.SetNonFlexibleGrowMode( wx.FLEX_GROWMODE_SPECIFIED )				self.transformerRating_label = wx.StaticText( self, wx.ID_ANY, u"Rating", wx.DefaultPosition, wx.DefaultSize, 0 )		self.transformerRating_label.Wrap( -1 )		self.transformerRating_label.SetFont( wx.Font( 10, 70, 90, 90, False, wx.EmptyString ) )				transformerRating.Add( self.transformerRating_label, 0, wx.ALIGN_CENTER_VERTICAL|wx.ALIGN_LEFT, 5 )				self.transformerRating_input = wx.TextCtrl( self, wx.ID_ANY, wx.EmptyString, wx.DefaultPosition, wx.Size( 40,-1 ), wx.TE_LEFT|wx.TE_PROCESS_ENTER|wx.TE_PROCESS_TAB )		self.transformerRating_input.SetMaxLength( 5 ) 		self.transformerRating_input.SetFont( wx.Font( 10, 70, 90, 90, False, wx.EmptyString ) )				transformerRating.Add( self.transformerRating_input, 0, wx.ALIGN_LEFT|wx.FIXED_MINSIZE|wx.LEFT|wx.RIGHT, 5 )				self.transformerRating_units = wx.StaticText( self, wx.ID_ANY, u"MVA", wx.DefaultPosition, wx.DefaultSize, wx.ALIGN_LEFT )		self.transformerRating_units.Wrap( -1 )		self.transformerRating_units.SetFont( wx.Font( 10, 70, 90, 90, False, wx.EmptyString ) )				transformerRating.Add( self.transformerRating_units, 0, wx.ALIGN_CENTER_VERTICAL, 5 )						TransformerParameterList.Add( transformerRating, 1, wx.ALIGN_LEFT|wx.ALIGN_TOP|wx.FIXED_MINSIZE, 5 )				transformerCost = wx.FlexGridSizer( 1, 4, 0, 0 )		transformerCost.SetFlexibleDirection( wx.HORIZONTAL )		transformerCost.SetNonFlexibleGrowMode( wx.FLEX_GROWMODE_SPECIFIED )				self.transformerCost_label = wx.StaticText( self, wx.ID_ANY, u"Cost", wx.DefaultPosition, wx.DefaultSize, 0 )		self.transformerCost_label.Wrap( -1 )		self.transformerCost_label.SetFont( wx.Font( 10, 70, 90, 90, False, wx.EmptyString ) )				transformerCost.Add( self.transformerCost_label, 0, wx.ALIGN_CENTER_VERTICAL|wx.ALIGN_LEFT, 5 )				self.transformerCost_input = wx.TextCtrl( self, wx.ID_ANY, wx.EmptyString, wx.DefaultPosition, wx.Size( 40,-1 ), wx.TE_LEFT|wx.TE_PROCESS_ENTER|wx.TE_PROCESS_TAB )		self.transformerCost_input.SetMaxLength( 5 ) 		self.transformerCost_input.SetFont( wx.Font( 10, 70, 90, 90, False, wx.EmptyString ) )				transformerCost.Add( self.transformerCost_input, 0, wx.ALIGN_LEFT|wx.FIXED_MINSIZE|wx.LEFT|wx.RIGHT, 5 )				transformerCost_currencyChoices = [ u"AED: United Arab Emirates Dirham", u"AFN: Afghan Afghani", u"ALL: Albanian Lek", u"AMD: Armenian Dram", u"AOA: Angolan Kwanza", u"ARS: Argentine Peso", u"AUD: Australian Dollar", u"AWG: Aruban Florin", u"AZN: Azerbaijani Manat", u"BAM: Bosnia-Herzegovina Convertible Mark", u"BBD: Barbadian Dollar", u"BDT: Bangladeshi Taka", u"BGN: Bulgarian Lev", u"BHD: Bahraini Dinar", u"BIF: Burundian Franc", u"BMD: Bermudan Dollar", u"BND: Brunei Dollar", u"BOB: Bolivian Boliviano", u"BRL: Brazilian Real", u"BSD: Bahamian Dollar", u"BTN: Bhutanese Ngultrum", u"BWP: Botswanan Pula", u"BYR: Belarusian Ruble", u"BZD: Belize Dollar", u"CAD: Canadian Dollar", u"CDF: Congolese Franc", u"CHF: Swiss Franc", u"CLP: Chilean Peso", u"CNY: Chinese Yuan", u"COP: Colombian Peso", u"CRC: Costa Rican Colón", u"CUP: Cuban Peso", u"CVE: Cape Verdean Escudo", u"CZK: Czech Republic Koruna", u"DJF: Djiboutian Franc", u"DKK: Danish Krone", u"DOP: Dominican Peso", u"DZD: Algerian Dinar", u"EEK: Estonian Kroon", u"EGP: Egyptian Pound", u"ETB: Ethiopian Birr", u"EUR: Euro" ]		self.transformerCost_currency = wx.Choice( self, wx.ID_ANY, wx.DefaultPosition, wx.Size( 70,-1 ), transformerCost_currencyChoices, 0 )		self.transformerCost_currency.SetSelection( 0 )		self.transformerCost_currency.SetFont( wx.Font( 10, 70, 90, 90, False, wx.EmptyString ) )				transformerCost.Add( self.transformerCost_currency, 0, wx.RIGHT, 5 )				self.transformerCost_units = wx.StaticText( self, wx.ID_ANY, u"per unit", wx.DefaultPosition, wx.DefaultSize, wx.ALIGN_LEFT )		self.transformerCost_units.Wrap( -1 )		self.transformerCost_units.SetFont( wx.Font( 10, 70, 90, 90, False, wx.EmptyString ) )				transformerCost.Add( self.transformerCost_units, 0, wx.ALIGN_CENTER_VERTICAL, 5 )						TransformerParameterList.Add( transformerCost, 1, wx.EXPAND, 5 )				transformerDepreciation = wx.FlexGridSizer( 1, 3, 0, 0 )		transformerDepreciation.SetFlexibleDirection( wx.HORIZONTAL )		transformerDepreciation.SetNonFlexibleGrowMode( wx.FLEX_GROWMODE_SPECIFIED )				self.transformerDepreciation_label = wx.StaticText( self, wx.ID_ANY, u"Depreciation", wx.DefaultPosition, wx.DefaultSize, 0 )		self.transformerDepreciation_label.Wrap( -1 )		self.transformerDepreciation_label.SetFont( wx.Font( 10, 70, 90, 90, False, wx.EmptyString ) )				transformerDepreciation.Add( self.transformerDepreciation_label, 0, wx.ALIGN_CENTER_VERTICAL|wx.ALIGN_LEFT, 5 )				self.transformerDepreciation_input = wx.TextCtrl( self, wx.ID_ANY, wx.EmptyString, wx.DefaultPosition, wx.Size( 40,-1 ), wx.TE_LEFT|wx.TE_PROCESS_ENTER|wx.TE_PROCESS_TAB )		self.transformerDepreciation_input.SetMaxLength( 5 ) 		self.transformerDepreciation_input.SetFont( wx.Font( 10, 70, 90, 90, False, wx.EmptyString ) )				transformerDepreciation.Add( self.transformerDepreciation_input, 0, wx.ALIGN_LEFT|wx.FIXED_MINSIZE|wx.LEFT|wx.RIGHT, 5 )				self.transformerDepreciation_units = wx.StaticText( self, wx.ID_ANY, u"% / year", wx.DefaultPosition, wx.DefaultSize, wx.ALIGN_LEFT )		self.transformerDepreciation_units.Wrap( -1 )		self.transformerDepreciation_units.SetFont( wx.Font( 10, 70, 90, 90, False, wx.EmptyString ) )				transformerDepreciation.Add( self.transformerDepreciation_units, 0, wx.ALIGN_CENTER_VERTICAL, 5 )						TransformerParameterList.Add( transformerDepreciation, 1, wx.EXPAND, 5 )						TransformerParameterContainer.Add( TransformerParameterList, 1, wx.EXPAND, 5 )						ComponentParameterContainer.Add( TransformerParameterContainer, 1, wx.FIXED_MINSIZE, 5 )				TXCablesParameterContainer = wx.StaticBoxSizer( wx.StaticBox( self, wx.ID_ANY, u"Transmission Cables" ), wx.VERTICAL )				TXCableParameterList = wx.GridSizer( 6, 1, 3, 0 )				TXCableDiameter = wx.FlexGridSizer( 1, 3, 0, 0 )		TXCableDiameter.SetFlexibleDirection( wx.HORIZONTAL )		TXCableDiameter.SetNonFlexibleGrowMode( wx.FLEX_GROWMODE_SPECIFIED )				self.TXCableDiameter_label = wx.StaticText( self, wx.ID_ANY, u"Diameter", wx.DefaultPosition, wx.DefaultSize, 0 )		self.TXCableDiameter_label.Wrap( -1 )		self.TXCableDiameter_label.SetFont( wx.Font( 10, 70, 90, 90, False, wx.EmptyString ) )				TXCableDiameter.Add( self.TXCableDiameter_label, 0, wx.ALIGN_CENTER_VERTICAL|wx.ALIGN_LEFT, 5 )				self.TXCableDiameter_input = wx.TextCtrl( self, wx.ID_ANY, wx.EmptyString, wx.DefaultPosition, wx.Size( 40,-1 ), wx.TE_LEFT|wx.TE_PROCESS_ENTER|wx.TE_PROCESS_TAB )		self.TXCableDiameter_input.SetMaxLength( 5 ) 		self.TXCableDiameter_input.SetFont( wx.Font( 10, 70, 90, 90, False, wx.EmptyString ) )				TXCableDiameter.Add( self.TXCableDiameter_input, 0, wx.ALIGN_LEFT|wx.FIXED_MINSIZE|wx.LEFT|wx.RIGHT, 5 )				self.TXCableDiameter_units = wx.StaticText( self, wx.ID_ANY, u"mm / strand", wx.DefaultPosition, wx.DefaultSize, wx.ALIGN_LEFT )		self.TXCableDiameter_units.Wrap( -1 )		self.TXCableDiameter_units.SetFont( wx.Font( 10, 70, 90, 90, False, wx.EmptyString ) )				TXCableDiameter.Add( self.TXCableDiameter_units, 0, wx.ALIGN_CENTER_VERTICAL, 5 )						TXCableParameterList.Add( TXCableDiameter, 1, wx.ALIGN_LEFT|wx.ALIGN_TOP|wx.FIXED_MINSIZE, 5 )				TXCableNumStrands = wx.FlexGridSizer( 1, 2, 0, 0 )		TXCableNumStrands.SetFlexibleDirection( wx.HORIZONTAL )		TXCableNumStrands.SetNonFlexibleGrowMode( wx.FLEX_GROWMODE_SPECIFIED )				self.TXCableNumStrands_label = wx.StaticText( self, wx.ID_ANY, u"Number of Strands", wx.DefaultPosition, wx.DefaultSize, 0 )		self.TXCableNumStrands_label.Wrap( -1 )		self.TXCableNumStrands_label.SetFont( wx.Font( 10, 70, 90, 90, False, wx.EmptyString ) )				TXCableNumStrands.Add( self.TXCableNumStrands_label, 0, wx.ALIGN_CENTER_VERTICAL|wx.ALIGN_LEFT, 5 )				self.TXCableNumStrands_input = wx.TextCtrl( self, wx.ID_ANY, wx.EmptyString, wx.DefaultPosition, wx.Size( 40,-1 ), wx.TE_LEFT|wx.TE_PROCESS_ENTER|wx.TE_PROCESS_TAB )		self.TXCableNumStrands_input.SetMaxLength( 5 ) 		self.TXCableNumStrands_input.SetFont( wx.Font( 10, 70, 90, 90, False, wx.EmptyString ) )				TXCableNumStrands.Add( self.TXCableNumStrands_input, 0, wx.ALIGN_LEFT|wx.FIXED_MINSIZE|wx.LEFT|wx.RIGHT, 5 )						TXCableParameterList.Add( TXCableNumStrands, 1, wx.EXPAND, 5 )				TXCableMaterial = wx.FlexGridSizer( 1, 3, 0, 0 )		TXCableMaterial.SetFlexibleDirection( wx.HORIZONTAL )		TXCableMaterial.SetNonFlexibleGrowMode( wx.FLEX_GROWMODE_SPECIFIED )				self.TXCableMaterial_label = wx.StaticText( self, wx.ID_ANY, u"Material", wx.DefaultPosition, wx.DefaultSize, 0 )		self.TXCableMaterial_label.Wrap( -1 )		self.TXCableMaterial_label.SetFont( wx.Font( 10, 70, 90, 90, False, wx.EmptyString ) )				TXCableMaterial.Add( self.TXCableMaterial_label, 0, wx.ALIGN_CENTER_VERTICAL|wx.ALIGN_LEFT, 5 )				TXCable_inputChoices = [ u"Copper", u"Aluminium" ]		self.TXCable_input = wx.Choice( self, wx.ID_ANY, wx.DefaultPosition, wx.DefaultSize, TXCable_inputChoices, 0 )		self.TXCable_input.SetSelection( 0 )		TXCableMaterial.Add( self.TXCable_input, 0, wx.LEFT|wx.RIGHT, 5 )						TXCableParameterList.Add( TXCableMaterial, 1, wx.ALIGN_LEFT|wx.ALIGN_TOP|wx.FIXED_MINSIZE, 5 )				TXCableLength = wx.FlexGridSizer( 1, 3, 0, 0 )		TXCableLength.SetFlexibleDirection( wx.HORIZONTAL )		TXCableLength.SetNonFlexibleGrowMode( wx.FLEX_GROWMODE_SPECIFIED )				self.TXCableLength_label = wx.StaticText( self, wx.ID_ANY, u"Length", wx.DefaultPosition, wx.DefaultSize, 0 )		self.TXCableLength_label.Wrap( -1 )		self.TXCableLength_label.SetFont( wx.Font( 10, 70, 90, 90, False, wx.EmptyString ) )				TXCableLength.Add( self.TXCableLength_label, 0, wx.ALIGN_CENTER_VERTICAL|wx.ALIGN_LEFT, 5 )				self.TXCableLength_input = wx.TextCtrl( self, wx.ID_ANY, wx.EmptyString, wx.DefaultPosition, wx.Size( 40,-1 ), wx.TE_LEFT|wx.TE_PROCESS_ENTER|wx.TE_PROCESS_TAB )		self.TXCableLength_input.SetMaxLength( 5 ) 		self.TXCableLength_input.SetFont( wx.Font( 10, 70, 90, 90, False, wx.EmptyString ) )				TXCableLength.Add( self.TXCableLength_input, 0, wx.ALIGN_LEFT|wx.FIXED_MINSIZE|wx.LEFT|wx.RIGHT, 5 )				self.TXCableLength_units = wx.StaticText( self, wx.ID_ANY, u"m", wx.DefaultPosition, wx.DefaultSize, wx.ALIGN_LEFT )		self.TXCableLength_units.Wrap( -1 )		self.TXCableLength_units.SetFont( wx.Font( 10, 70, 90, 90, False, wx.EmptyString ) )				TXCableLength.Add( self.TXCableLength_units, 0, wx.ALIGN_CENTER_VERTICAL, 5 )						TXCableParameterList.Add( TXCableLength, 1, wx.EXPAND, 5 )				TXCableCost = wx.FlexGridSizer( 1, 4, 0, 0 )		TXCableCost.SetFlexibleDirection( wx.HORIZONTAL )		TXCableCost.SetNonFlexibleGrowMode( wx.FLEX_GROWMODE_SPECIFIED )				self.TXCableCost_label = wx.StaticText( self, wx.ID_ANY, u"Cost", wx.DefaultPosition, wx.DefaultSize, 0 )		self.TXCableCost_label.Wrap( -1 )		self.TXCableCost_label.SetFont( wx.Font( 10, 70, 90, 90, False, wx.EmptyString ) )				TXCableCost.Add( self.TXCableCost_label, 0, wx.ALIGN_CENTER_VERTICAL|wx.ALIGN_LEFT, 5 )				self.TXCableCost_input = wx.TextCtrl( self, wx.ID_ANY, wx.EmptyString, wx.DefaultPosition, wx.Size( 40,-1 ), wx.TE_LEFT|wx.TE_PROCESS_ENTER|wx.TE_PROCESS_TAB )		self.TXCableCost_input.SetMaxLength( 5 ) 		self.TXCableCost_input.SetFont( wx.Font( 10, 70, 90, 90, False, wx.EmptyString ) )				TXCableCost.Add( self.TXCableCost_input, 0, wx.ALIGN_LEFT|wx.FIXED_MINSIZE|wx.LEFT|wx.RIGHT, 5 )				TXCableCost_currencyChoices = [ u"AED: United Arab Emirates Dirham", u"AFN: Afghan Afghani", u"ALL: Albanian Lek", u"AMD: Armenian Dram", u"AOA: Angolan Kwanza", u"ARS: Argentine Peso", u"AUD: Australian Dollar", u"AWG: Aruban Florin", u"AZN: Azerbaijani Manat", u"BAM: Bosnia-Herzegovina Convertible Mark", u"BBD: Barbadian Dollar", u"BDT: Bangladeshi Taka", u"BGN: Bulgarian Lev", u"BHD: Bahraini Dinar", u"BIF: Burundian Franc", u"BMD: Bermudan Dollar", u"BND: Brunei Dollar", u"BOB: Bolivian Boliviano", u"BRL: Brazilian Real", u"BSD: Bahamian Dollar", u"BTN: Bhutanese Ngultrum", u"BWP: Botswanan Pula", u"BYR: Belarusian Ruble", u"BZD: Belize Dollar", u"CAD: Canadian Dollar", u"CDF: Congolese Franc", u"CHF: Swiss Franc", u"CLP: Chilean Peso", u"CNY: Chinese Yuan", u"COP: Colombian Peso", u"CRC: Costa Rican Colón", u"CUP: Cuban Peso", u"CVE: Cape Verdean Escudo", u"CZK: Czech Republic Koruna", u"DJF: Djiboutian Franc", u"DKK: Danish Krone", u"DOP: Dominican Peso", u"DZD: Algerian Dinar", u"EEK: Estonian Kroon", u"EGP: Egyptian Pound", u"ETB: Ethiopian Birr", u"EUR: Euro" ]		self.TXCableCost_currency = wx.Choice( self, wx.ID_ANY, wx.DefaultPosition, wx.Size( 70,-1 ), TXCableCost_currencyChoices, 0 )		self.TXCableCost_currency.SetSelection( 0 )		self.TXCableCost_currency.SetFont( wx.Font( 10, 70, 90, 90, False, wx.EmptyString ) )				TXCableCost.Add( self.TXCableCost_currency, 0, wx.RIGHT, 5 )				self.TXCableCost_units = wx.StaticText( self, wx.ID_ANY, u"per m", wx.DefaultPosition, wx.DefaultSize, wx.ALIGN_LEFT )		self.TXCableCost_units.Wrap( -1 )		self.TXCableCost_units.SetFont( wx.Font( 10, 70, 90, 90, False, wx.EmptyString ) )				TXCableCost.Add( self.TXCableCost_units, 0, wx.ALIGN_CENTER_VERTICAL, 5 )						TXCableParameterList.Add( TXCableCost, 1, wx.EXPAND, 5 )				TXCableDepreciation = wx.FlexGridSizer( 1, 3, 0, 0 )		TXCableDepreciation.SetFlexibleDirection( wx.HORIZONTAL )		TXCableDepreciation.SetNonFlexibleGrowMode( wx.FLEX_GROWMODE_SPECIFIED )				self.TXCableDepreciation_label = wx.StaticText( self, wx.ID_ANY, u"Depreciation", wx.DefaultPosition, wx.DefaultSize, 0 )		self.TXCableDepreciation_label.Wrap( -1 )		self.TXCableDepreciation_label.SetFont( wx.Font( 10, 70, 90, 90, False, wx.EmptyString ) )				TXCableDepreciation.Add( self.TXCableDepreciation_label, 0, wx.ALIGN_CENTER_VERTICAL|wx.ALIGN_LEFT, 5 )				self.TXCableDepreciation_input = wx.TextCtrl( self, wx.ID_ANY, wx.EmptyString, wx.DefaultPosition, wx.Size( 40,-1 ), wx.TE_LEFT|wx.TE_PROCESS_ENTER|wx.TE_PROCESS_TAB )		self.TXCableDepreciation_input.SetMaxLength( 5 ) 		self.TXCableDepreciation_input.SetFont( wx.Font( 10, 70, 90, 90, False, wx.EmptyString ) )				TXCableDepreciation.Add( self.TXCableDepreciation_input, 0, wx.ALIGN_LEFT|wx.FIXED_MINSIZE|wx.LEFT|wx.RIGHT, 5 )				self.TXCableDepreciation_units = wx.StaticText( self, wx.ID_ANY, u"% / year", wx.DefaultPosition, wx.DefaultSize, wx.ALIGN_LEFT )		self.TXCableDepreciation_units.Wrap( -1 )		self.TXCableDepreciation_units.SetFont( wx.Font( 10, 70, 90, 90, False, wx.EmptyString ) )				TXCableDepreciation.Add( self.TXCableDepreciation_units, 0, wx.ALIGN_CENTER_VERTICAL, 5 )						TXCableParameterList.Add( TXCableDepreciation, 1, wx.EXPAND, 5 )						TXCablesParameterContainer.Add( TXCableParameterList, 1, wx.EXPAND, 5 )						ComponentParameterContainer.Add( TXCablesParameterContainer, 1, wx.FIXED_MINSIZE, 5 )						ComponentParameterLabelledContainer.Add( ComponentParameterContainer, 1, 0, 5 )						InputContainer.Add( ComponentParameterLabelledContainer, 1, 0, 5 )						ApplicationContainer.Add( InputContainer, 1, 0, 5 )						self.SetSizer( ApplicationContainer )		self.Layout()				self.Centre( wx.BOTH )		def __del__( self ):		pass	